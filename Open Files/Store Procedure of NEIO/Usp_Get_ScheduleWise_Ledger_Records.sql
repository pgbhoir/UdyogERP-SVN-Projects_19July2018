IF EXISTS(SELECT [NAME] FROM SYS.PROCEDURES WHERE [NAME]='USP_GET_SCHEDULEWISE_LEDGER_RECORDS')
BEGIN
	DROP PROCEDURE USP_GET_SCHEDULEWISE_LEDGER_RECORDS
END
GO

CREATE PROCEDURE USP_GET_SCHEDULEWISE_LEDGER_RECORDS
AS
BEGIN

	;WITH ACGROUP AS
	(
		SELECT 'G' AS [TYPE], A.AC_GROUP_NAME AS SchdName,A.AC_GROUP_ID AS SchdId,A.GAC_ID, CAST('G'+'_0' AS VARCHAR(10)) AS PARCODE,
			CAST('G'+'_'+CAST(A.AC_GROUP_ID AS VARCHAR) AS VARCHAR(250)) AS ORDERPATH, 'E' AS ADDEDIT
			FROM AC_GROUP_MAST A
				WHERE A.AC_GROUP_ID=A.GAC_ID
		UNION ALL
		SELECT 'G' AS [TYPE], A.AC_GROUP_NAME AS SchdName,A.AC_GROUP_ID AS SchdId,A.GAC_ID, CAST('G'+'_'+CAST(A.GAC_ID AS VARCHAR) AS VARCHAR(10)) AS PARCODE,
			CAST(B.ORDERPATH+'/'+'G'+'_'+CAST(A.AC_GROUP_ID AS VARCHAR) AS VARCHAR(250)) AS ORDERPATH, 'E' AS ADDEDIT
			FROM AC_GROUP_MAST A
				INNER JOIN ACGROUP B ON A.GAC_ID=B.SchdId AND A.AC_GROUP_ID != A.GAC_ID
	)
	SELECT * INTO ##ACGROUP FROM ACGROUP 
		ORDER BY ORDERPATH, SchdName

	;WITH LEDGER_LIST AS
	(
		SELECT A.[TYPE], A.SchdName, cast(A.SchdId as int) AS SchdId,A.GAC_ID, CAST(A.PARCODE AS VARCHAR(10)) AS PARCODE, A.ORDERPATH, A.ADDEDIT AS ADDEDIT
			FROM ##ACGROUP A
		UNION ALL 
		SELECT 'A' AS [TYPE], A.AC_NAME AS SchdName, cast(A.AC_ID as INT), A.Ac_group_id, CAST('G'+'_'+CAST(A.Ac_group_id AS VARCHAR) AS VARCHAR(10)) AS PARCODE, 
			CAST(B.ORDERPATH+'/'+'A'+'_'+CAST(A.AC_ID AS VARCHAR) AS VARCHAR(250)) AS ORDERPATH, 'E' AS ADDEDIT
			FROM AC_MAST A
				INNER JOIN LEDGER_LIST B ON A.AC_GROUP_ID=B.SchdId AND B.[TYPE]!='A'
	)
	SELECT * FROM LEDGER_LIST
		ORDER BY ORDERPATH, SchdName
		
	DROP TABLE ##ACGROUP
END

